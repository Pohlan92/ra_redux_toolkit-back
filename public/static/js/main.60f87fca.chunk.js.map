{"version":3,"sources":["components/ServiceList/FilterServices.jsx","actions/actionTypes.js","actions/actionCreators.js","components/ServiceList/LoadingSpinner.jsx","components/ServiceForm/ServiceForm.jsx","components/ServiceList/ErrorPopup.jsx","components/ServiceForm/EditServiceForm.jsx","components/ServiceForm/AddServiceForm.jsx","components/Modal/Modal.jsx","hooks/useOnClickOutside.js","components/ServiceList/ServiceList.jsx","App.jsx","reducers/serviceList.js","reducers/addService.js","reducers/editService.js","store/index.js","index.js"],"names":["FilterServices","onFilter","useState","value","setValue","className","type","onChange","target","ADD_SERVICE","REMOVE_SERVICE","EDIT_SERVICE","GET_SERVICE","CHANGE_ADD_SERVICE_FIELD","RESET_EDIT_FORM","CHANGE_EDIT_SERVICE_FIELD","FILL_EDIT_FORM","FETCH_SERVICES_REQUEST","FETCH_SERVICES_FAILURE","FETCH_SERVICES_SUCCESS","ADD_SERVICE_REQUEST","ADD_SERVICE_FAILURE","ADD_SERVICE_SUCCESS","EDIT_SERVICE_REQUEST","EDIT_SERVICE_FAILURE","EDIT_SERVICE_SUCCESS","addService","item","payload","removeService","id","editService","resetEditForm","fillEditForm","data","fetchFullService","dispatch","a","getResponse","url","process","console","log","message","fetchServices","items","error","fetchAddService","history","method","push","fetchEditService","fetchRemoveService","fetch","ok","body","JSON","stringify","response","Error","statusText","json","LoadingSpinner","radius","width","color","length","viewBox","cx","cy","r","fill","strokeWidth","stroke","ServiceForm","onInputChange","onFormSubmit","isLoading","formData","useSelector","state","service","onSubmit","e","preventDefault","label","name","inputValue","price","content","FormInput","ErrorPopup","EditServiceForm","useDispatch","useHistory","loading","useEffect","changeEditServiceField","AddServiceForm","changeAddServiceField","AddServiceModal","isOpen","EditServiceModal","match","params","Modal","children","ref","useRef","onClose","handler","listener","element","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","to","onClick","ServiceList","services","map","i","key","ServiceItem","Button","App","serviceList","filtered","setFiltered","exact","path","string","filteredServices","filter","toLowerCase","includes","filterByString","component","initialState","reducer","combineReducers","Number","serviceIndex","findIndex","newServiceList","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60f87fca.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const FilterServices = ({ onFilter }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = ({ target: { value } }) => {\n    setValue(value);\n    onFilter(value);\n  };\n\n  return (\n    <div className=\"filter-services\">\n      <label className=\"filter-services_label\">\n        <span className=\"filter-services_text\">Search</span>\n        <input\n          type=\"text\"\n          className=\"filter-services_input\"\n          onChange={onChange}\n          value={value}\n        />\n      </label>\n    </div>\n  );\n};\n","export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const GET_SERVICE = 'GET_SERVICE';\n\nexport const CHANGE_ADD_SERVICE_FIELD = 'CHANGE_ADD_SERVICE_FIELD';\nexport const RESET_EDIT_FORM = 'RESET_EDIT_FORM';\n\nexport const CHANGE_EDIT_SERVICE_FIELD = 'CHANGE_EDIT_SERVICE_FIELD';\nexport const CHANGE_MODAL_STATE = 'CHANGE_MODAL_STATE';\nexport const FILL_EDIT_FORM = 'FILL_EDIT_FORM';\n\nexport const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_FAILURE = 'FETCH_SERVICES_FAILURE';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\n\nexport const ADD_SERVICE_REQUEST = 'ADD_SERVICE_REQUEST';\nexport const ADD_SERVICE_FAILURE = 'ADD_SERVICE_FAILURE';\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\n\nexport const EDIT_SERVICE_REQUEST = 'EDIT_SERVICE_REQUEST';\nexport const EDIT_SERVICE_FAILURE = 'EDIT_SERVICE_FAILURE';\nexport const EDIT_SERVICE_SUCCESS = 'EDIT_SERVICE_SUCCESS';\n","import {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  GET_SERVICE,\n  EDIT_SERVICE,\n  CHANGE_MODAL_STATE,\n  FILL_EDIT_FORM,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_SUCCESS,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_SUCCESS,\n  ADD_SERVICE_FAILURE,\n  CHANGE_ADD_SERVICE_FIELD,\n  CHANGE_EDIT_SERVICE_FIELD,\n  RESET_EDIT_FORM,\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_SUCCESS,\n  EDIT_SERVICE_FAILURE,\n} from './actionTypes';\n\nexport const addService = (item) => {\n  return { type: ADD_SERVICE, payload: item };\n};\n\nexport const removeService = (id) => {\n  return { type: REMOVE_SERVICE, payload: { id } };\n};\n\nexport const getService = (item) => {\n  return { type: GET_SERVICE, payload: item };\n};\n\nexport const editService = (item) => {\n  return { type: EDIT_SERVICE, payload: item };\n};\n\nexport const changeAddServiceField = (name, value) => {\n  return { type: CHANGE_ADD_SERVICE_FIELD, payload: { name, value } };\n};\n\nexport const changeEditServiceField = (name, value) => {\n  return { type: CHANGE_EDIT_SERVICE_FIELD, payload: { name, value } };\n};\n\nexport const resetEditForm = () => {\n  return { type: RESET_EDIT_FORM };\n};\n\nexport const changeModalState = (isOpen) => {\n  return { type: CHANGE_MODAL_STATE, payload: { isOpen } };\n};\n\nexport const fillEditForm = (data) => {\n  return { type: FILL_EDIT_FORM, payload: { ...data } };\n};\n\nexport const fetchServicesRequest = () => {\n  return { type: FETCH_SERVICES_REQUEST };\n};\n\nexport const fetchServicesSuccess = (items) => {\n  return { type: FETCH_SERVICES_SUCCESS, payload: { items } };\n};\n\nexport const fetchServicesFailure = (error) => {\n  return { type: FETCH_SERVICES_FAILURE, payload: { error } };\n};\n\nexport const addServiceRequest = () => {\n  return { type: ADD_SERVICE_REQUEST };\n};\n\nexport const addServiceSuccess = () => {\n  return { type: ADD_SERVICE_SUCCESS };\n};\n\nexport const addServiceFailure = (error) => {\n  return { type: ADD_SERVICE_FAILURE, payload: { error } };\n};\n\nexport const editServiceRequest = () => {\n  return { type: EDIT_SERVICE_REQUEST };\n};\n\nexport const editServiceSuccess = () => {\n  return { type: EDIT_SERVICE_SUCCESS };\n};\n\nexport const editServiceFailure = (error) => {\n  return { type: EDIT_SERVICE_FAILURE, payload: { error } };\n};\n\nexport const fetchFullService = async (dispatch, id) => {\n  try {\n    const data = await getResponse({\n      url: `${process.env.REACT_APP_API_SERVICES}/${id}`,\n    });\n    dispatch(getService(data));\n    dispatch(fillEditForm(data));\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport const fetchServices = async (dispatch) => {\n  dispatch(fetchServicesRequest());\n  try {\n    const data = await getResponse({ url: process.env.REACT_APP_API_SERVICES });\n    dispatch(fetchServicesSuccess(data));\n  } catch (e) {\n    console.log(e.message);\n    dispatch(fetchServicesFailure(e.message));\n  }\n};\n\nexport const fetchAddService = async (dispatch, item, history) => {\n  dispatch(addServiceRequest());\n  try {\n    const data = await getResponse({\n      url: process.env.REACT_APP_API_SERVICES,\n      method: 'POST',\n      data: item,\n    });\n    dispatch(addServiceSuccess());\n    dispatch(addService(data));\n    dispatch(resetEditForm());\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  } catch (e) {\n    dispatch(addServiceFailure(e.message));\n  }\n};\n\nexport const fetchEditService = async (dispatch, item, history) => {\n  dispatch(editServiceRequest());\n  try {\n    const data = await getResponse({\n      url: `${process.env.REACT_APP_API_SERVICES}/${item.id}`,\n      method: 'PUT',\n      data: item,\n    });\n    dispatch(editServiceSuccess());\n    dispatch(editService(data));\n    dispatch(resetEditForm());\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  } catch (e) {\n    dispatch(editServiceFailure(e.message));\n  }\n};\n\nexport const fetchRemoveService = async (dispatch, id) => {\n  const response = await fetch(`${process.env.REACT_APP_API_SERVICES}/${id}`, {\n    method: 'DELETE',\n  });\n  if (response.ok) {\n    dispatch(removeService(id));\n  }\n};\n\nasync function getResponse({ url, method, data }) {\n  const response = await fetch(url, {\n    method,\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n","export const LoadingSpinner = ({ radius, width, color }) => {\n  // radius и width работают совсем не так, как мне нужно было, но оставлю так\n  const length = radius * 2.5;\n\n  return (\n    <svg className=\"loading-spinner\" viewBox={`0 0 ${length} ${length}`}>\n      <circle\n        className=\"path\"\n        cx={length / 2}\n        cy={length / 2}\n        r={radius}\n        fill=\"none\"\n        strokeWidth={width}\n        stroke={color}\n      ></circle>\n    </svg>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { LoadingSpinner } from '../ServiceList/LoadingSpinner';\n\nexport const ServiceForm = ({\n  type,\n  onInputChange,\n  onFormSubmit,\n  isLoading,\n}) => {\n  const formData = useSelector((state) => state[`${type}Service`].service);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(formData);\n  };\n\n  return (\n    <div className=\"form_container\">\n      {isLoading && (\n        <div className=\"loading_wrapper\">\n          <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n        </div>\n      )}\n      <form onSubmit={onSubmit} className=\"add-service_form\">\n        <FormInput\n          label=\"Name\"\n          name=\"name\"\n          inputValue={formData.name}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <FormInput\n          label=\"Price\"\n          name=\"price\"\n          inputValue={formData.price}\n          onInputChange={onInputChange}\n          type=\"number\"\n        />\n        <FormInput\n          label=\"Description\"\n          name=\"content\"\n          inputValue={formData.content}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <button type=\"submit\" className=\"form_submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst FormInput = ({ name, label, inputValue, onInputChange, type }) => {\n  const onChange = ({ target: { value } }) => {\n    // для цены, костыль на скорую руку\n    const inputValue = type === 'number' ? +value : value;\n    onInputChange(name, inputValue);\n  };\n\n  return (\n    <label className=\"form_label\">\n      <span className=\"form_label_text\">{label}</span>\n      <input\n        onChange={onChange}\n        className=\"form_input\"\n        value={inputValue}\n        type={type}\n      />\n    </label>\n  );\n};\n","export const ErrorPopup = ({ message }) => {\n  return (\n    <div className=\"error-message\">{message}</div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport {\n  changeEditServiceField,\n  fetchEditService,\n  fetchFullService,\n} from '../../actions/actionCreators';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nexport const EditServiceForm = ({ id }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error } = useSelector((state) => state.editService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeEditServiceField(name, value));\n  };\n\n  const onFormSubmit = ({ id, name, price, content }) => {\n    if (name && price && content) {\n      fetchEditService(dispatch, { id, name, price, content }, history);\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  useEffect(() => {\n    fetchFullService(dispatch, id);\n  }, []);\n\n  return (\n    <>\n      <ServiceForm\n        type=\"edit\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} />}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport {\n  changeAddServiceField,\n  fetchAddService,\n} from '../../actions/actionCreators';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nexport const AddServiceForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { loading, error } = useSelector((state) => state.addService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeAddServiceField(name, value));\n  };\n\n  const onFormSubmit = ({ name, price, content }) => {\n    if (name && price && content) {\n      fetchAddService(dispatch, { name, price, content }, history);\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  return (\n    <>\n      <ServiceForm\n        type=\"add\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} />}\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { resetEditForm } from '../../actions/actionCreators';\nimport { EditServiceForm } from '../ServiceForm/EditServiceForm';\nimport { AddServiceForm } from '../ServiceForm/AddServiceForm';\n\nexport const AddServiceModal = () => {\n  return (\n    <Modal isOpen>\n      <AddServiceForm />\n    </Modal>\n  );\n};\n\nexport const EditServiceModal = ({ match }) => {\n  return (\n    <Modal isOpen>\n      <EditServiceForm id={match.params.id} />\n    </Modal>\n  );\n};\n\nexport const Modal = ({ children, isOpen }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const ref = useRef();\n\n  const onClose = () => {\n    // довольно костыльно диспатчить это в модалке в отрыве от самой формы\n    dispatch(resetEditForm());\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  };\n\n  useOnClickOutside(ref, onClose);\n\n  return (\n    isOpen && (\n      <div className=\"modal_wrapper\">\n        <div className=\"modal\" ref={ref}>\n          <Link to={process.env.REACT_APP_HOMEPAGE}>\n            <button className=\"modal_close-btn\" onClick={onClose}>\n              ×\n            </button>\n          </Link>\n          {children}\n        </div>\n      </div>\n    )\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOnClickOutside = (ref, handler) => {\n  // позаимствованный хук\n  useEffect(() => {\n    const listener = (e) => {\n      const element = ref.current;\n      if (!element || element.contains(e.target)) {\n        return;\n      }\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [handler, ref]);\n};\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { fetchRemoveService } from '../../actions/actionCreators';\n\nexport const ServiceList = ({ services }) => {\n  return (\n    <ul className=\"service-list\">\n      {services.map((service, i) => (\n        <ServiceItem {...service} key={i} />\n      ))}\n    </ul>\n  );\n};\n\nconst ServiceItem = ({ name, price, id }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onRemove = () => {\n    fetchRemoveService(dispatch, id);\n  };\n\n  const onEdit = () => {\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  };\n\n  return (\n    <li className=\"service-item\">\n      <div className=\"service-item_info\">\n        <div className=\"service-item_name\">{name}</div>\n        <div className=\"service-item_price\">{price} ₽</div>\n      </div>\n      <div className=\"service-item_controls\">\n        <Link to={`${process.env.REACT_APP_HOMEPAGE}/${id}`}>\n          <Button onClick={onEdit} label=\"Edit\" />\n        </Link>\n        <Button onClick={onRemove} label=\"Remove\" />\n      </div>\n    </li>\n  );\n};\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button onClick={onClick} className=\"service-item_btn\">\n      {label}\n    </button>\n  );\n};\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { FilterServices } from './components/ServiceList/FilterServices';\r\nimport { AddServiceModal, EditServiceModal } from './components/Modal/Modal';\r\nimport { ServiceList } from './components/ServiceList/ServiceList';\r\nimport { LoadingSpinner } from './components/ServiceList/LoadingSpinner';\r\nimport { ErrorPopup } from './components/ServiceList/ErrorPopup';\r\n\r\nimport { fetchServices } from './actions/actionCreators';\r\nimport './styles/app.css';\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n  const { services, loading, error } = useSelector(\r\n    (state) => state.serviceList,\r\n  );\r\n\r\n  const [filtered, setFiltered] = useState('');\r\n\r\n  const filterByString = (string, services) => {\r\n    return services.filter((service) =>\r\n      service.name.toLowerCase().includes(string.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  const onFilter = (string) => {\r\n    const filteredServices = filterByString(string, services);\r\n    setFiltered(filteredServices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchServices(dispatch);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path={['/', '/ra_thunk']}>\r\n        {/*HOMEPAGE добавил из-за нюанса на GitHub Pages, такое вот костыльное решение*/}\r\n        <Redirect to={process.env.REACT_APP_HOMEPAGE} />\r\n      </Route>\r\n      {loading ? (\r\n        <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\r\n      ) : error ? (\r\n        <ErrorPopup message={error} />\r\n      ) : (\r\n        <div className=\"services-app\">\r\n          <Link\r\n            to={`${process.env.REACT_APP_HOMEPAGE}/add`}\r\n            className=\"add-service_link\"\r\n          >\r\n            <button className=\"add-service_btn\">Add new service</button>\r\n          </Link>\r\n          <FilterServices onFilter={onFilter} />\r\n          <ServiceList services={filtered || services} />\r\n          <Switch>\r\n            <Route\r\n              path={`${process.env.REACT_APP_HOMEPAGE}/add`}\r\n              component={AddServiceModal}\r\n            ></Route>\r\n            <Route\r\n              path={`${process.env.REACT_APP_HOMEPAGE}/:id`}\r\n              component={EditServiceModal}\r\n            ></Route>\r\n          </Switch>\r\n        </div>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n","import {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  services: [],\n  loading: false,\n  error: null,\n};\n\nexport const serviceListReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_SERVICES_REQUEST:\n      return { ...state, loading: true, error: null };\n\n    case FETCH_SERVICES_FAILURE:\n      const { error } = payload;\n      return { ...state, loading: false, error };\n\n    case FETCH_SERVICES_SUCCESS:\n      const { items } = payload;\n      return {\n        ...initialState,\n        services: items,\n      };\n\n    case ADD_SERVICE: {\n      const { id, name, price, content } = payload;\n      return {\n        ...state,\n        services: [\n          ...state.services,\n          { id, name, price: Number(price), content },\n        ],\n      };\n    }\n\n    case REMOVE_SERVICE: {\n      const { id } = payload;\n      return {\n        ...state,\n        services: state.services.filter((service) => service.id != id),\n      };\n    }\n\n    case EDIT_SERVICE: {\n      const { id, name, price, content } = payload;\n      const serviceIndex = state.services.findIndex(\n        (service) => service.id == id,\n      );\n      const newServiceList = [...state.services];\n      newServiceList[serviceIndex] = { id, name, price, content };\n\n      return {\n        ...state,\n        services: newServiceList,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  CHANGE_ADD_SERVICE_FIELD,\n  ADD_SERVICE_REQUEST,\n  ADD_SERVICE_FAILURE,\n  ADD_SERVICE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  service: {\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const addServiceReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_ADD_SERVICE_FIELD: {\n      const { name, value } = payload;\n      return { ...state, service: { ...state.service, [name]: value } };\n    }\n\n    case ADD_SERVICE_REQUEST: {\n      return { ...state, loading: true, error: null };\n    }\n\n    case ADD_SERVICE_FAILURE: {\n      const { error } = payload;\n      return { ...state, loading: false, error };\n    }\n\n    case ADD_SERVICE_SUCCESS: {\n      return { ...initialState };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  CHANGE_EDIT_SERVICE_FIELD,\n  FILL_EDIT_FORM,\n  RESET_EDIT_FORM,\n  EDIT_SERVICE_REQUEST,\n  EDIT_SERVICE_FAILURE,\n  EDIT_SERVICE_SUCCESS,\n  GET_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  service: {\n    id: '',\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const editServiceReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_SERVICE: {\n      const { id, name, price, content } = payload;\n      return { ...state, service: { id, name, price, content } };\n    }\n\n    case CHANGE_EDIT_SERVICE_FIELD: {\n      const { name, value } = payload;\n      return { ...state, service: { ...state.service, [name]: value } };\n    }\n\n    case EDIT_SERVICE_REQUEST: {\n      return { ...state, loading: true, error: null };\n    }\n\n    case EDIT_SERVICE_FAILURE: {\n      const { error } = payload;\n      return { ...state, loading: false, error };\n    }\n\n    case EDIT_SERVICE_SUCCESS: {\n      return { ...initialState };\n    }\n\n    case FILL_EDIT_FORM: {\n      const { id, name, price, content } = payload;\n      return { ...state, service: { id, name, price, content } };\n    }\n\n    case RESET_EDIT_FORM: {\n      return { ...initialState };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from 'redux';\n\nimport { serviceListReducer } from '../reducers/serviceList';\nimport { addServiceReducer } from '../reducers/addService';\nimport { editServiceReducer } from '../reducers/editService';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  addService: addServiceReducer,\n  editService: editServiceReducer,\n});\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}